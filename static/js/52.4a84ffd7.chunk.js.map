{"version":3,"file":"static/js/52.4a84ffd7.chunk.js","mappings":"0PAWaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oEAMzBC,EAAiBJ,EAAAA,GAAAA,IAAUK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iCAI3BG,GAAWN,EAAAA,EAAAA,IAAOO,EAAAA,IAAPP,CAAaQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,yLASxBM,GAAqBT,EAAAA,EAAAA,IAAOU,EAAAA,IAAPV,CAAYW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,yLASjCS,GAAQZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAmBc,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,iYAc1BG,EAIAG,GAKDM,GAAef,EAAAA,EAAAA,IAAOgB,EAAAA,GAAPhB,CAAmBiB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,6CAKlCe,EAAYlB,EAAAA,GAAAA,MAAYmB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,oEAMxBiB,EAAapB,EAAAA,GAAAA,OAAaqB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,2d,+ECtDjCmB,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KAAaC,MAAM,yBAAyBC,SAAS,YAC5DC,SAAUH,EAAAA,KAAaE,SAAS,2BAGrBE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAeC,EAAAA,EAAAA,KAAfD,YAENE,EAAAA,EAAAA,YAAU,WACNF,GACFG,EAAAA,GAAAA,MAAY,gDAEZL,GAASM,EAAAA,EAAAA,KAEb,GAAE,CAACN,EAAUE,IAEX,OACEK,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbb,MAAO,GACPE,SAAU,IAEZJ,iBAAkBA,EAClBgB,SAAU,SAACC,EAAQC,GARF,IAAAC,EASfD,EAAQE,YATOD,EAUFF,EAVWX,GAASe,EAAAA,EAAAA,IAAMF,GAWzC,EAAEG,UAEFC,EAAAA,EAAAA,MAAC9C,EAAI,CAAA6C,SAAA,EACHC,EAAAA,EAAAA,MAAC3B,EAAS,CAAA0B,SAAA,CAAC,SAETC,EAAAA,EAAAA,MAACzC,EAAc,CAAAwC,SAAA,EACbT,EAAAA,EAAAA,KAACvB,EAAK,CAACkC,KAAK,QAAQC,KAAK,QAAQC,aAAa,SAC9Cb,EAAAA,EAAAA,KAAC7B,EAAQ,QAEX6B,EAAAA,EAAAA,KAACpB,EAAY,CAACgC,KAAK,QAAQE,UAAU,aAGvCJ,EAAAA,EAAAA,MAAC3B,EAAS,CAAA0B,SAAA,CAAC,YAETC,EAAAA,EAAAA,MAACzC,EAAc,CAAAwC,SAAA,EACbT,EAAAA,EAAAA,KAACvB,EAAK,CAACkC,KAAK,WAAWC,KAAK,WAAWC,aAAa,SACpDb,EAAAA,EAAAA,KAAC1B,EAAkB,QAErB0B,EAAAA,EAAAA,KAACpB,EAAY,CAACgC,KAAK,WAAWE,UAAU,aAE1Cd,EAAAA,EAAAA,KAACf,EAAU,CAAC0B,KAAK,SAAQF,SAAC,eAIlC,ECrEaM,EAAYlD,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oG,SCkBnC,MAfA,WACE,IAAQgD,GAAkBpB,EAAAA,EAAAA,KAAlBoB,cACR,OACEhB,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAR,SACGO,GACChB,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,KAEPlB,EAAAA,EAAAA,KAACe,EAAS,CAAAN,UACRT,EAAAA,EAAAA,KAACR,EAAS,OAKpB,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login/Login.styled.js","pages/Login/Login.js"],"sourcesContent":["import {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nimport { IoMdMail as Email } from 'react-icons/io';\nimport { RiLockPasswordFill as Lock } from 'react-icons/ri';\n\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const InputContainer = styled.div`\n  position: relative;\n`;\n\nexport const IoMdMail = styled(Email)`\n  position: absolute;\n  top: 50%;\n  left: -1%;\n  transform: translateY(-50%) translateX(16px);\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  pointer-events: none;\n`;\n\nexport const RiLockPasswordFill = styled(Lock)`\n  position: absolute;\n  top: 50%;\n  left: -1%;\n  transform: translateY(-50%) translateX(16px);\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  pointer-events: none;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 0px 32px;\n  width: 100%;\n  height: 40px;\n  border: 1px solid rgba(46, 47, 66, 0.4);\n  border-radius: 4px;\n  outline: 2px solid transparent;\n  outline-offset: -2px;\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:focus {\n    outline-color: #4d5ae5;\n  }\n\n  &:focus + ${IoMdMail} {\n    color: #4d5ae5;\n  }\n\n  &:focus + ${RiLockPasswordFill} {\n    color: #4d5ae5;\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 14px;\n  color: red;\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const FormButton = styled.button`\n  display: block;\n  height: 48px;\n  min-width: 168px;\n  border: none;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 16px 32px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 16px;\n  color: #ffffff;\n  background-color: #4d5ae5;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #404bbf;\n    cursor: pointer;\n  }\n`;\n","import { Formik } from 'formik';\nimport {\n  Field,\n  Form,\n  ErrorMessage,\n  FormGroup,\n  InputContainer,\n  IoMdMail,\n  RiLockPasswordFill,\n  FormButton,\n} from './LoginForm.styled';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/operations';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { resetError } from '../../redux/auth/authSlice';\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string().required('No password provided.'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\nconst { isRejected } = useAuth();\n\n  useEffect(() => {\n  if (isRejected) {\n    toast.error('Oops! Something went wrong. Try again please');\n  }\n    dispatch(resetError());\n  \n},[dispatch, isRejected]);\n  const handleSubmit = value => dispatch(logIn(value));\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={(values, actions) => {\n        actions.resetForm();\n        handleSubmit(values);\n      }}\n    >\n      <Form>\n        <FormGroup>\n          Email\n          <InputContainer>\n            <Field type=\"email\" name=\"email\" autoComplete=\"off\" />\n            <IoMdMail />\n          </InputContainer>\n          <ErrorMessage name=\"email\" component=\"span\" />\n        </FormGroup>\n\n        <FormGroup>\n          Password\n          <InputContainer>\n            <Field type=\"password\" name=\"password\" autoComplete=\"off\" />\n            <RiLockPasswordFill />\n          </InputContainer>\n          <ErrorMessage name=\"password\" component=\"span\" />\n        </FormGroup>\n        <FormButton type=\"submit\">Log In</FormButton>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 408px;\n  padding: 23px 25px;\n  border: 1px solid gray;\n  border-radius: 4px;\n`;","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Container } from './Login.styled';\nimport { useAuth } from '../../hooks/useAuth';\nimport { Loader } from '../../components/Loader/Loader';\n\nfunction Login() {\n  const { isLoadingAuth } = useAuth();\n  return (\n    <>\n      {isLoadingAuth ? (\n        <Loader />\n      ) : (\n        <Container>\n          <LoginForm />\n        </Container>\n      )}\n    </>\n  );\n}\n\nexport default Login;\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","InputContainer","_templateObject2","IoMdMail","Email","_templateObject3","RiLockPasswordFill","Lock","_templateObject4","Field","FormikField","_templateObject5","ErrorMessage","FormikError","_templateObject6","FormGroup","_templateObject7","FormButton","_templateObject8","validationSchema","Yup","email","required","password","LoginForm","dispatch","useDispatch","isRejected","useAuth","useEffect","toast","resetError","_jsx","Formik","initialValues","onSubmit","values","actions","value","resetForm","logIn","children","_jsxs","type","name","autoComplete","component","Container","isLoadingAuth","_Fragment","Loader"],"sourceRoot":""}